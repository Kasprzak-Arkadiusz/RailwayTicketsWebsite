@page
@model WebApp.Frontend.Pages.Routes.EditModel
@{
    Layout = "~/Frontend/Pages/Shared/_Layout.cshtml";
}
<h3>Editing the route</h3>
<hr />

@foreach (var error in Model.Errors)
{
    <div class="alert-danger alert">
        @error
    </div>
}

<div class="row justify-content-center">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                @Html.DisplayNameFor(model => model.Route.DepartureTime)
                <input asp-for="Route.DepartureTime" type="time" asp-format="{0:HH:mm}" class="form-control"/>
                <span asp-validation-for="Route.DepartureTime" class="text-danger"></span>
            </div>
            <div class="form-group">
                @Html.DisplayNameFor(model => model.Route.ArrivalTime)
                <input asp-for="Route.ArrivalTime" type="time" asp-format="{0:HH:mm}" class="form-control"/>
                <span asp-validation-for="Route.ArrivalTime" class="text-danger"></span>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Route.StartingStation, new { @class = "col-form-label" })
                <div class="form-text">
                    @Html.DropDownListFor(model => model.Route.StartingStation, Model.Route.StartingStations,
                        "--Select the starting station--", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Route.StartingStation, "",
                        new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Route.FinalStation, new { @class = "col-form-label" })
                <div class="form-text">
                    @Html.DropDownListFor(model => model.Route.FinalStation, Model.Route.FinalStations,
                        "--Select the final station--", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Route.FinalStation, "",
                        new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Route.TrainId, new { @class = "col-form-label" })
                <div class="form-text">
                    @Html.DropDownListFor(model => model.Route.TrainId, Model.Route.TrainIds,
                        "--Select train identifier--", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Route.TrainId, "",
                        new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Route.IsSuspended"/>
                    @Html.DisplayNameFor(model => model.Route.IsSuspended)
                </label>
            </div>
            @Html.Hidden("Route.Id", Model.Route.Id)
            <div class="form-group">
                <a class="btn btn-secondary" asp-page="/Routes/FindRoutes">Back to List</a>
                <input type="submit" value="Create" class="btn btn-success"/>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("../Shared/_ValidationScriptsPartial.cshtml");}
}
